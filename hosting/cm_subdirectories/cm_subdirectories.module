<?php

/**
 * Expose a type of service to the Service API.
 *
 * Return a new type of service (such as http, dns, db etc.) to
 * the service API.
 *
 * This information will be used to display the server node form,
 * allowing you to create services of this type.
 *
 * Just defining a service type without any implementations of it,
 * will automatically provide the "None" implementation.
 *
 * You will then need to create a new file in the same directory
 * as your module named "$module.service.inc, containing at
 * least a single class named "provisionService_$service", which
 * extends the base provisionService class.
 *
 * @return
 *    an associative array with the index declaring the service
 *    type, and containing another associative array of properties.
 *    At present only the 'title' property is required for display
 *    of the server node form.
 */
function cm_subdirectories_hosting_service_type() {
  return array('subfolder' => array('title' => t('Subfolder service')));
}

/**
 * Expose a service implementation to the service API.
 *
 * Return a service implementation, such as the "apache" implementation
 * of the "http" service.
 *
 * You will then need to either extend the existing $module.service.inc
 * file, or create a new file, containing the implementation of your service.
 */
function cm_subdirectories_hosting_service() {
  return array('basic' => 'subfolder');
}


function cm_subdirectories_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'site_node_form') {
    $node = $form['#node'];

    _hosting_site_field($form, $node, 'subfolder_path', array(
        '#type' => 'textfield',
        '#title' => t('Subfolder path'),
        '#required' => FALSE,
        //'#description' => t('The database server the site will use to host its content.'),
        '#default_value' => isset($node->subfolder_path) ? $node->subfolder_path : '',
      ));
  }
}

function cm_subdirectories_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'update':
    case 'insert':
      if (isset($node->subfolder_path)) {
        variable_set('cm_subdirectories_' . $node->nid . '_path', $node->subfolder_path);
      }
      break;
    case 'load':
      $additions = array();

      $path = variable_get('cm_subdirectories_' . $node->nid . '_path', NULL);
      if (!is_null($path)) {
        $additions['subfolder_path'] = $path;
      }

      return $additions;
  }
}
